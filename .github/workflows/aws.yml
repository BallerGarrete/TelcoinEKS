name: Deploy to EKS

on:
  push:
    branches: [main]

env:
  AWS_REGION: us-west-1
  ECR_REPOSITORY: public.ecr.aws/d7d3m1t5/aws-eks
  K8S_NAMESPACE: my-k8s-namespace
  K8S_DEPLOYMENT: my-k8s-deployment
  K8S_CONTAINER: my-k8s-container

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and push Docker image
        id: build-image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ env.ECR_REPOSITORY }}:${{ github.sha }}

      - name: Deploy to EKS
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EKS_HOST }}
          username: ${{ secrets.EKS_USERNAME }}
          key: ${{ secrets.EKS_KEY }}
          port: ${{ secrets.EKS_PORT }}
          script: |
            kubectl config set-cluster my-cluster --server=https://${{ secrets.EKS_HOST }}
            kubectl config set-context my-context --cluster=my-cluster --namespace=${{ env.K8S_NAMESPACE }} --user=aws
            kubectl config use-context my-context
            kubectl set image deployment/${{ env.K8S_DEPLOYMENT }} ${env.K8S_CONTAINER}=${{ env.ECR_REPOSITORY }}:${{ github.sha }}
